package statics;

import finals.FinalTest;

/**
 * static 可以用来修饰：属性；方法；代码块；内部类
 *
 * static修饰属性：静态变量(类变量)
 *       属性：按是否使用static修饰，可分为 静态属性 和 非静态属性(实例变量)
 *           实例变量：创建多个类的对象，每个对象都拥有一套类中的非静态属性，但修改其中的一个对象的非静态属性时，
 *                   不会导致其他类中的同样的属性值发生修改
 *           静态变量：创建多个类的对象，多个对象共享同一个静态变量，但通过某一个对象修改静态变量时，会导致其他对象调用
 *                   这个静态变量时，已经是被修改过的
 *      静态变量随着类的加载而加载，可以通过 "类.静态变量" 的方式进行调用
 *      静态变量的加载要早于对象的创建
 *      由于类只加载一次，则静态变量在内存中也只会存在一份，在方法区的静态域中
 *
 * static修饰方法：静态方法
 *        随着类的加载而加载，可以通过 "类.静态方法" 的方式进行调用
 *        静态方法中只能调用静态的方法或属性
 *        非静态方法中两者的方法和属性都可以被调用
 *
 * static注意点：
 *       在静态的方法内，不能使用this关键字，super关键字（super为this的父类，但this在static之后创建）
 *       关于静态属性和静态方法的使用，从类或对象的生命周期方面理解(两者在jvm中的创建加载顺序)
 *
 */

public class StaticTest {
    public static void show(){
        System.out.println("jhh");
    }

    public void info(){}

}
class A extends StaticTest {



}